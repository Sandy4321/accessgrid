
		    The Access Grid Toolkit (AGTk)
			
			       2005-05-13
				
	    http://www.mcs.anl.gov/fl/research/accessgrid
	    
		       The Access Grid Project

		      http://www.accessgrid.org/

----------------------------------------------------------------------


RUNNING FROM SOURCE OR CVS CHECKOUT


. Overview

Developers will want to run AccessGrid software directly from a source
tree instead of building entire packages and installing them each time.
You'll need to setup configuration files so you can test newly modified
code or a fresh cvs checkout without building an installation package.

To set up a configuration, run the tools/CvsSetup.py tool in either 
windows or linux.  It generates AccessGrid configuration files for
use with AccessGrid applications.


. A Simple Example

Here is a linux example of how to setup and run from a fresh cvs 
checkout.  There is very little difference on windows.

To get the code, we'll checkout the files from cvs.  Instructions are here:
http://www-unix.mcs.anl.gov/fl/research/accessgrid/software/cvs/index.html
If you have already checked out a copy of the code, you can use that instead.
  > cvs co AccessGrid

Run the CvsSetup tool and specify the source and destination directories.
The checked out AccessGrid source is located in the "AccessGrid" directory.
  > python AccessGrid/tools/CvsSetup.py --agdir AccessGrid

Configuration files have now been created in the "AccessGrid/Config" directory.
Instructions for setting your paths to use the new configuration are displayed.  You 
can set PYTHONPATH and AGTK_LOCATION or simply execute the appropriate script that was
created:

  With bash or similar shell:
      >  . env-init.sh
  With csh or similar shell:
      >  source env-init.csh
  On Windows:
      >  env-init.bat

Now you should be able to run the VenueClient (personalNode mode shown).
  > python VenueClient.py --personalNode

. Note that to use node services (VideoConsumerService, AudioSrevice etc.), you need to install
ones from a released distribution or build their dependencies (such as vic and rat) and package
them (packaging/makeServicePackages).

