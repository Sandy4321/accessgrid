#
# The following are variables that are used throughout the rest of the
# spec file. If you see %{variable_name} this is where it's assigned
#
%define	name		AccessGrid
%define version		2.3
%define release		RELEASE
%define	prefix		/usr
%define sysconfdir	/etc/%{name}/Config
%define sharedir	%{prefix}/share
%define xdg_config_dirs	/etc/xdg
%define xdg_data_dirs	%{sharedir}
%define buildroot	%{_builddir}/AccessGrid-%{version}
%define debug_package	%{nil}


# Optik is included with Python 2.3, so only require it for older pythons
%define require_optik %(python -c 'import sys ; print (int(float(sys.version[:3]) < 2.3))')
 
%define pyver %(python -c 'import sys ; print sys.version[:3]')

%define has_fc1_appmenu_file %([ -f /etc/X11/desktop-menus/applications.menu ] && echo 1 || echo 0)


#
# The following defines the AccessGrid rpm
#

Summary:	The Access Grid Toolkit
Name:		%{name}
Version:	%{version}
Release:	%{release}
License:	AGTPL
Group:		Utilities/System
URL:		http://www.accessgrid.org
Vendor:		Argonne National Laboratory
Source:		%{name}-%{version}-%{release}.tar.gz
BuildRoot:	%{buildroot}
Requires:	python >= 2.2.3
Requires:	wxPython
Requires:	globus-accessgrid
Requires:	alsa-lib >= 1.0
%if %{require_optik}
Requires:	python-optik
%endif
%if %{has_fc1_appmenu_file}
Requires:	patch
%endif
Obsoletes:	AccessGrid-BridgeServer
Obsoletes:	AccessGrid-VenueServer
Obsoletes:	AccessGrid-VenueClient
Obsoletes:	pyOpenSSL_AG
Obsoletes:	pyGlobus
Obsoletes:	logging

%description
The Access Grid Toolkit provides the necessary components for users to participate in Access Grid based collaborations, and also for developers to work on network services, applications services and node services to extend the functionality of the Access Grid.

This module provides the core components to start participating in the Access Grid.

%prep
%setup -n AccessGrid-%{version} -c

#
# The following builds the package using setup.py
# It starts by zipping up the services in the services directory
# then builds the package
#

%build


#
# The following installs the package in the buildroot,
# moves the etc directory to the "root" directory,
# until services are starting at boot
#

%install
# Move node services and shared apps into etc 
mv NodeServices etc/AccessGrid
mv SharedApplications etc/AccessGrid
rm -rf etc/AccessGrid/SharedBrowser*
rm -f share/applications/AccessGrid/DevelopersDocumentation.desktop
mkdir etc/AccessGrid/Services
mkdir etc/AccessGrid/PackageCache
mkdir etc/AccessGrid/Logs

# Create a usr dir, and move dirs thereunder
mkdir usr
mv share usr/share
mv lib usr/lib
mv bin usr/bin


#
# Define the files that are to go into the AccessGrid package
# - Mark documents as documents for rpm
# - Install python modules with default permissions
# - Install AGServiceManager.py and agsm service with executable permissions
#
%files
%defattr(-,root,root)
%{prefix}/lib/python%{pyver}/site-packages/*
/etc/AccessGrid
/etc/init.d/agns
/etc/init.d/agsm
%{sharedir}/%{name}/ag.ico
%{sharedir}/%{name}/ag-ellipse.png
%defattr(0755,root,root)
%{prefix}/bin/AGServiceManager.py
# - Install AGNodeService.py, VenueClient.py, and NodeManagement.py with
#   executable permissions
# - Install the AGNodeService config file and tag it as a config file
#   for rpm
# - Install the default node configuration, make it owned by ag, and tag it
#   as a config file for rpm
%defattr(0755,root,root)
%{prefix}/bin/AGNodeService.py
%{prefix}/bin/VenueClient.py
%{prefix}/bin/NodeManagement.py
%{prefix}/bin/NodeSetupWizard.py
%{prefix}/bin/CertificateRequestTool.py
%{prefix}/bin/certmgr.py
%{prefix}/bin/agpm.py
%{prefix}/bin/GoToVenue.py
%{sharedir}/doc/AccessGrid
#
# - Install VenueManagement.py and VenueServer.py
#   with executable permissions
#
%defattr(0755,root,root)
%{prefix}/bin/VenueManagement.py
%{prefix}/bin/VenueServer.py
#
# - Install the python BridgeServer implementation
# - Install the QuickBridge executable
#
%defattr(0755,root,root)
%{prefix}/bin/BridgeServer.py
%{prefix}/bin/QuickBridge
# - Install the Gnome/KDE menu items
%defattr(-,root,root)
%{xdg_data_dirs}/applications/%{name}
%if %{has_fc1_appmenu_file}
  %{xdg_data_dirs}/desktop-menu-files/*
  %{xdg_data_dirs}/desktop-menu-patches/*
%else
  %{xdg_config_dirs}/menus/applications-merged/*
  %{xdg_data_dirs}/desktop-directories/*
%endif

#
# AccessGrid package postinstall commands
# - Make a file, /tmp/AccessGrid-Postinstall.py, run it, then delete.
#   This script will compile all the AccessGrid python modules
#

%post
cat <<EOF > /tmp/AccessGrid-Postinstall.py
#!/usr/bin/python
import AccessGrid
import AccessGrid.hosting
import os
import os.path
import glob
import sys

def modimport(module):
    for module_file in glob.glob(os.path.join(module.__path__[0], "*.py")):
	try:
            __import__(module.__name__ + "." + os.path.basename(module_file[:-3]))
	except:
	    pass

sys.stdout.write("Compiling Access Grid Python modules.... ")
modimport(AccessGrid)
modimport(AccessGrid.hosting)
modimport(AccessGrid.Platform)
sys.stdout.write("Done\n")
EOF
. /etc/profile.d/globus.sh
chmod +x /tmp/AccessGrid-Postinstall.py
/tmp/AccessGrid-Postinstall.py
rm -f /tmp/AccessGrid-Postinstall.py
agpm.py --post-install

%if %{has_fc1_appmenu_file}
  # patch /etc/X11/desktop-menus/applications.menu to add an AccessGrid menu
  APPMENU_PATCH=%{xdg_data_dirs}/desktop-menu-patches/AccessGrid-menu.patch

  cd /
  patch -p0 -N -t -l -s --dry-run 2>&1 > /dev/null < $APPMENU_PATCH

  if [ "$?" == 0 ]; then
      patch -p0 -N -t -l -s < $APPMENU_PATCH
  fi
%endif

#
# AccessGrid package pre-uninstall
# - Create a file, /tmp/AccessGrid-Preuninstall.py, run it, then delete it.
#   This script will remove those compiled AccessGrid python modules

%preun
cat <<EOF > /tmp/AccessGrid-Preuninstall.py
#!/usr/bin/python
import AccessGrid
import AccessGrid.hosting
import AccessGrid.Security
import AccessGrid.Security.wxgui
import AccessGrid.Platform
import AccessGrid.Platform.unix
import os
import os.path
import glob

def delcompiled(module):
    for module_file in glob.glob(os.path.join(module.__path__[0], "*.pyc")):
        try:
            os.remove(module_file)
        except os.error:
            pass

delcompiled(AccessGrid.Security.wxgui)
delcompiled(AccessGrid.Security)
delcompiled(AccessGrid.Platform.unix)
delcompiled(AccessGrid.Platform)
delcompiled(AccessGrid.hosting.SOAPpy)
delcompiled(AccessGrid.hosting)
delcompiled(AccessGrid)
EOF
. /etc/profile.d/globus.sh
chmod +x /tmp/AccessGrid-Preuninstall.py
/tmp/AccessGrid-Preuninstall.py
rm -f /tmp/AccessGrid-Preuninstall.py

%if %{has_fc1_appmenu_file}
  # remove AccessGrid menu from /etc/X11/desktop-menus/applications.menu
  APPMENU_PATCH=%{xdg_data_dirs}/desktop-menu-patches/AccessGrid-menu.patch

  cd /
  patch -p0 -N -t -l -s -R --dry-run 2>&1 > /dev/null < $APPMENU_PATCH

  if [ "$?" == 0 ]; then
      patch -p0 -N -t -l -s -R < $APPMENU_PATCH
  fi
%endif

#
# After the RPMs have been successfully built remove the temporary build
# space
#

%clean
rm -rf %{buildroot}

#
# This is the ChangeLog. You should add to this if you do anything to this
# spec file
#

%changelog

* Mon May 23 2004 Douglas Kosovic <douglask@itee.uq.edu.au>
- Merged Fedora Core 1 & 2 AccessGrid.spec.in files into this single file



