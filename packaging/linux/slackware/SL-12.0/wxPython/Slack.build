#!/bin/sh

# Slackware build script for wxPython

# Copyright 2007-2009 Heinz Wiesinger <pprkut@liwjatan.at>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Copyright 2009 Christoph Willing <chris at uq.edu.au>
# All rights reserved. No additional restrictions.
# Add wxPython & enclosed i_files directories to installed includes
# Add slack-* files for slapt-get compatibility
# Add some 64bit support

PRGNAM=wxPython
VERSION=2.8.10.1
SHORT_VERSION=2.8
ARCH=${ARCH:-`uname -m`}
BUILD=${BUILD:-1}
TAG=${TAG:-_uqv}

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${RELEASEDIR:-/tmp}

here=$CWD
srcpkg=$PRGNAM-src-$VERSION.tar.bz2
builddir=$TMP/$PRGNAM-src-$VERSION
master_sites=http://downloads.sourceforge.net/wxpython
master_sites=http://www.vislab.uq.edu.au/ag3/distfiles

PATH=/sbin:${PATH}
functions=/usr/src/slackbuilds/functions
. ${functions}

# Gnomeprint support
GNOMEPRINT=${GNOMEPRINT:-no}

if [ "$GNOMEPRINT" = "no" ]; then
    do_gp="without"
else
    do_gp="with"
fi

distro=slackware
pkgname=$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.tgz
DISTLIB=/usr/lib
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
elif [ "$ARCH" = "x86_64" -o "$ARCH" = "x86_64_slamd64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  distro=slamd64
  DISTLIB=/usr/lib64
  pkgname=$PRGNAM-$VERSION-x86_64_slamd64-$BUILD$TAG.tgz
fi

prereqs="python"
check_prereqs ${prereqs} || exit


set -e

get_srcpkg ${srcpkg}
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf ${builddir}
tar jxvf $CWD/${srcpkg}
cd ${builddir}
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --disable-static \
  --with-sdl \
  --with-opengl \
  --$do_gp-gnomeprint \
  --enable-unicode \
  --enable-graphics_ctx \
  --build=$ARCH-${distro}-linux \
  --host=$ARCH-${distro}-linux

make

#Additional stuff needed by wxPython
make -C contrib/src/gizmos
make -C contrib/src/stc

make install DESTDIR=$PKG
make -C contrib/src/gizmos install DESTDIR=$PKG
make -C contrib/src/stc install DESTDIR=$PKG

cd wxPython
  python setup.py \
    WXPORT=gtk2 \
    UNICODE=1 \
    EP_ADD_OPTS=1 \
    EP_FULL_VER=0 \
    NO_SCRIPTS=1 \
    WX_CONFIG="$TMP/$PRGNAM-src-$VERSION/wx-config --no_rpath" \
    build_ext --rpath=${DISTLIB} \
    build

  python setup.py \
    WXPORT=gtk2 \
    UNICODE=1 \
    EP_ADD_OPTS=1 \
    EP_FULL_VER=0 \
    NO_SCRIPTS=1 \
    WX_CONFIG="$TMP/$PRGNAM-src-$VERSION/wx-config --prefix=$PKG/usr/bin/ --no_rpath" \
    SYS_WX_CONFIG="wx-config --enable-unicode" \
    build_ext --rpath=${DISTLIB} \
    install --root=$PKG
cd -

# wxPython include files
cp -a include/wx-$SHORT_VERSION/wx/wxPython $PKG/usr/include/wx-$SHORT_VERSION/wx/

[ "${distro}" = "slamd64" ] && {
  mv $PKG/usr/lib/* $PKG/usr/lib64/
  rmdir $PKG/usr/lib
}

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION/wxPython
cp -a README.1st.txt docs* $PKG/usr/doc/$PRGNAM-$VERSION
cp -a wxPython/docs/* $PKG/usr/doc/$PRGNAM-$VERSION/wxPython
cat $CWD/Slack.build > $PKG/usr/doc/$PRGNAM-$VERSION/Slack.build
# Remove unnecessary docs
cd $PKG/usr/doc/$PRGNAM-$VERSION/docs
  rm -rf cocoa latex mac metrowerks microwin msw palmos word
cd -

# Copy the slack-desc (and a custom doinst.sh if necessary) into ./install
mkdir -p $PKG/install
mkdir -p $PKG/usr/src/slackbuilds/$PRGNAM-$VERSION
cat $CWD/Slack.build >$PKG/usr/src/slackbuilds/$PRGNAM-$VERSION/Slack.build
for pkgfile in `ls $CWD/slack-* $CWD/doinst.sh 2>/dev/null`
do
  [ -r ${pkgfile} ] && {
      cat ${pkgfile} >> $PKG/install/`basename ${pkgfile}`
      cat ${pkgfile} >> $PKG/usr/src/slackbuilds/$PRGNAM-$VERSION/`basename ${pkgfile}`
  }
done


cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.tgz

# Clean up
#
rm -f ${srcpkg}
rm -rf ${builddir}
rm -rf $PKG


# Changelog
#
# 20090521 CKW - release 1 of 2.8.10.1
#  - new upstream release
#  - new build script based on SBo
#  - include wxPython include files (esp. i_files directory)
#
