--- vic/net/net-ip.cpp.4533	2009-12-01 14:09:06.000000000 +1000
+++ vic/net/net-ip.cpp	2009-12-08 16:21:06.832261000 +1000
@@ -36,9 +36,6 @@
 #ifdef WIN32
 #include <io.h>
 #define close closesocket
-extern "C" {
-char *find_win32_interface(const char *addr, int ttl);
-}
 #else
 #include <sys/param.h>
 #include <sys/socket.h>
@@ -253,15 +250,6 @@
 		return (-1);
 	}
 	(IPAddress&)local_ = local.sin_addr;
-
-#ifdef WIN32
-	//if (!local_.is_set()) {
-		(IPAddress&)local_ = find_win32_interface(g_addr_, ttl);
-		//(IPAddress&)local_ = "127.0.0.1";
-		debug_msg("find_win32_interface localname:%s\n",(const char*)local_);
-	//}
-#endif
-
 	rsock_ = openrsock(g_addr_, s_addr_ssm_, port, local_);
 	if (rsock_ < 0) {
 		rsock_ = ssock_;
@@ -292,23 +280,18 @@
 	int len = sizeof(*p), result =0;
 #endif
 
+	if ((result = getsockname(ssock_, (struct sockaddr *)p, &len)) < 0) {
+		perror("getsockname");
+		p->sin_addr.s_addr = 0;
+		p->sin_port = 0;
+	}
 	// Use Local interface name if already set via command line
 	if (local_.is_set()) {
 		p->sin_addr.s_addr=(IPAddress&)local_;
-		debug_msg("Setting localname from cmd line:%s\n",(const char*)local_);
 		return (0);
 	}
 
-	if ((result = getsockname(ssock_, (struct sockaddr *)p, &len)) < 0) {
-	        debug_msg("getsockname failed, perror following:");
-		perror("getsockname");
-		p->sin_addr.s_addr = 0;
-		p->sin_port = 0;
-	} else 
-	    debug_msg("getsockname succeeded sin_addr.s_addr:%x\n",p->sin_addr.s_addr);
-
 	if (p->sin_addr.s_addr == 0) {
-		debug_msg("getsockname returned 0 so resorting to gethostname()\n");
 		p->sin_addr.s_addr = LookupLocalAddr();
 		result = ((p->sin_addr.s_addr != 0) ? (0) : (-1));
 	}
@@ -419,7 +402,7 @@
 				struct ip_mreq mr;
 
 				mr.imr_multiaddr.s_addr = g_addri;
-				mr.imr_interface.s_addr = locali;
+				mr.imr_interface.s_addr = INADDR_ANY;
 				if (setsockopt(fd, IPPROTO_IP, IP_ADD_MEMBERSHIP, 
 						(char *)&mr, sizeof(mr)) < 0) {
 					perror("IP_ADD_MEMBERSHIP");
@@ -558,7 +541,7 @@
 		/* Slightly nasty one here - set Mcast iface if local inteface
 		 * is specified on command line
 		 */
-		if (local_.is_set()) {
+		if (((const char*)local_)[0]!='\0') {
 			u_int32_t locali = (IPAddress&)local_;
 			if (setsockopt(fd, IPPROTO_IP, IP_MULTICAST_IF,
 						   (char*)&locali, sizeof(locali)) < 0) {
