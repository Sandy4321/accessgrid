=====================================
Build Test Package
=====================================
 
:version: $Revision: 1.2 $
:author: Eric Olson <eolson@mcs.anl.gov>
:status: Draft
:contact: ag-tech@mcs.anl.gov

Abstract
========

This informational document describes the building, testing, and packaging of the Access Grid Toolkit.

Overview
========

This document explains how to get the Access Grid Toolkit running from a source distribution.  It also explains the procedures used when packaging and testing the toolkit.


Module Organization
-------------------

AccessGrid
    packaging
    test
    AccessGrid
        test
   
Specifications
==============

Building
  This section will explain how to run the toolkit from a copy of the source code.  If you are porting to a new platform you will also want to read AGEP-#### Porting Guide. 

Running from source
  Obtain the source:
    From the Access Grid 2.x software webpages, follow the instructions for obtaining the source.  Currently cvs is the primary method to retrieve the source.  Future releases will also include source tarballs.

  Prerequisites:
    The prerequisites will vary with releases, but here is a short list of current packages.  A full list of separate packages is also listed on the (linux) download page.
       A Python installation (2.2 or greater)
       An installation of Globus (packaged for the Access Grid and available in the Access Grid cvs repository)
         This includes a globus environment setup such as a set GLOBUS_LOCATION environment variable.
       An installation of pyGlobus.
       An installation of pyOpenSSL_AG which is obtainable from the Access Grid cvs repository.
    
  Setup:
    Directions for setting up how to run from source are in the README-developers file.
    The basic procedure is as follows:
      1.  Change to the AccessGrid directory and create a local setup of the AccessGrid.
          > cd AccessGrid
          > python bin/CvsSetup.py -a . -d cfg
      2.  Run one of the new scripts to setup your environment each time you start a new session.
          windows : env-init.bat
          csh     : source env-init.csh
          bash    : source env-init.sh
  
Package and Testing Procedure

The general procedure for preparing a release is as follows:
  1. Basic testing and Unit testing from source.
  2. Packaging
  3. Run official unit tests and interactive tests. 
  4. If bugs were found -> fix and return to step 1

Packaging
  Packages for each platform will be generated by the individual(s) responsible for that platform's builds.  Those responsible for builds should make sure that more than one person is always kept up to date on how to build for that platform.  They also need to always keep build instructions up to date in cvs.  During testing, testers should be notified when a new test package becomes available.

Separate platform specific packaging notes will be provided to document the build process on each platform.  Source tarball distributions will currently be a tarred gzipped version of the Access Grid repository.  Additional tarballs will be available for prerequisites that are not available elsewhere such as AccessGrid Globus, pyGlobus, and pyOpenSSL_AG.

Testing
  The entire interactive test suite does not have to be performed each time a test package is built, but it and the unittests should be run through completely for the final release package.  AGEP-#### Test Strategy describes testing in more detail. 

Encountering bugs
  After fixing a bug
     Test it from cvs
     Run unittests from cvs
     [optional]  run initial tests from locally built package.  Do this if waiting for someone else to build an official test package.
     Test official package

Related AGEPs
=============

AGEP-#### Porting Guide
AGEP-#### Test Strategy

Copyright
=========

This document is Copyright 2003, The University of Chicago/Argonne
National Laboratory.



..
   Local Variables:
   mode: indented-text
   indent-tabs-mode: nil
   sentence-end-double-space: t
   fill-column: 70
   End:

