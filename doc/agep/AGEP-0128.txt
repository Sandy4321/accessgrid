=====================================
Capabilities
=====================================
 
:version: $Revision: 1.1 $
:author: Susanne Lefvert <lefvert@mcs.anl.gov>
:status: Draft
:contact: ag-tech@mcs.anl.gov

Abstract
========

    This document outlines a schema for describing node and network service capabilities.

Overview
========

    In order to develop a framework for network services that seamlessly can 
    bridge the gap between different client capabilities we need a general way 
    to describe nodes and available services.  

Summary of Modifications
========================

    One requirement for the capability schema is to use XML to describe nodes and services. 
    Since the AG currently does not include python to XML converters, description classes
    written in Python will include serializer/deserializers for XML.

    New classes:
    
    * **ServiceCapability**
      
      Describing node services such as VideoProducer, VideoConsumer etc.
    
    * **NodeCapability**
    
      Describing the entire node including services, network connectivity, preferences etc.
   
    * **NetworkServiceCapability**
    
      Describing a network service
      
    The old capability class included in all node services would be replaced with the new 
    ServiceCapability class.  The venue client provides one NodeCapability object when 
    entering the venue (including all service capabilities, preferences, etc) instead of just 
    a list of service capabilities.
        
Module Organization
-------------------

    AccessGrid
        AccessGrid
            **Capability** 
                **NodeCapability**

                **ServiceCapability**

                **NetworkServiceCapability**

Specifications
==============
        
**ServiceCapability**
    
    Class describing a node service capability, for example for the VideoService. 
    This would replace current Capability class and look like:

    ::

        ServiceCapability
            serviceId : int
            host : string
            type : video|audio
            role : consumer|producer
            priority : int
            codec : string
            bitRate : int
            sampleRate : int
            channel : int

            def __init__(name, role, type, host, id)
            def CreateServiceCapability(xml) 
            def ToXML()                       
            def Match(ServiceCapability)
            def GetId()
            def GetHost()
            def GetType()
            def GetRole()
            def GetPriority()
            def GetCodec()
            def GetBitRate()
            def GetSampleRate()
            def GetChannel()
            def SetId(id)
            def SetHost(host)
            def SetType(type)
            def SetRole(role)
            def SetPriority(prio)
            def SetCodec(codec)
            def SetBitRate(brate)
            def SetSampleRate(srate)
            def SetChannel(channel)              
                   
    ToXML() Example:

    ::

        <ServiceCapability>
            <Id> 0909903939393 </Id>
            <Type> video </Type>
            <Role> consumer </Role>
            <Priority> 1 </Role>
            <Codec> "H.261" </Codec>
            <BitRate> 128 </BitRate>
            <SampleRate> 8 </SampleRate>
            <Channel> -1 </Channel>
        </ServiceCapability>
         
**NodeCapability** 
    
    The node capability class describes a node with available node service capabilities 
    and general settings such as multicast availability, bandwidth, and so forth.  
    Each node service (AudioService, VideoService, etc) has a list of possible capabilities.  
    Each capability has a priority field that determines which capabilities are preferred for a 
    certain service.  The NodeCapability class replaces the old list of capabilities that are 
    provided by the client during capability negotiation in the venue. 
    
    ::

        NodeCapability
            id : int 
            name : sting
            host : string
            bandwidth : int
            multicast : int
            nodeServices : {ServiceId :[ServiceCapability]}     

            def __init__(name, host, id)
            def CreateNodeCapability(xml)
            def ToXML()
            def GetId()
            def GetHost()
            def GetName()
            def GetBandwidht()
            def GetMulticast()
            def SetId(id)            
            def SetHost(host)
            def SetName(name)
            def SetBandwidth(bw)
            def SetMulticast(multicast)
          

    ToXML() Example:
    
    ::
    
        <NodeCapability>
            <Id> 554443322111 </Id>
            <Name> "Susannes node" </Name>    
            <Host> "lib-video.mcs.anl.gov" </Host>
            <Bandwidth> -1 <Bandwidth>
            <Multicast> 1 </Multicast>
            <Service> VideoService
                <ServiceCapability>
                    <Id> 0809809808 </Id>
                    <Type> video </Type>
                    <Role> consumer </Role>
                    <Priority> 1 </Priority>
                    <Host> lib-video.mcs.anl.gov </Host>
                    <Codec> "H.261" </Codec>
                    <BitRate> 128 </BitRate>
                    <SampleRate> 8 </SampleRate>
                    <Channel> -1 </Channel>
                </ServiceCapability>
                <ServiceCapability>
                    <Id> 0809809808 </Id>
                    <Type> video </Type>
                    <Role> consumer </Role>
                    <Priority> 2 </Priority>
                    <Host> lib-video.mcs.anl.gov </Host>
                    <Codec> "H.263" </Codec>
                    <BitRate> 128 </BitRate>
                    <SampleRate> 8 </SampleRate>
                    <Channel> -1 </Channel>
                </ServiceCapability>
            </Service>
        </NodeCapability>


**NetworkServiceCapability**
    
    The network service capability class has a list of in and out ServiceCapabilities 
    that a network service is able to input and output.    

    ::    

        NetworkServiceCapability:
            input = [ServiceCapability]
            output = [ServiceCapability]
    
            def __init__()
            def CreateNetworkServiceCapability(xml)
            def ToXML()

    ToXML() Example:
    
    ::
    
        <NetworkServiceCapability>
            <Input>
                <ServiceCapability>
                    <Id> 3982738404 </Id>
                    <Type> audio </Type>
                    <Role> consumer </Role>
                    <Priority> 1 </Priority>
                    <Codec> linear16 </Codec>
                    <BitRate> 64 </BitRate>
                    <SampleRate> 8000 </SampleRate>
                    <Channel> 1 </Channel>
                </ServiceCapability>
                <ServiceCapability>
                    <Id> 3982738404 </Id>
                    <Type> audio </Type>
                    <Role> consumer </Role>
                    <Priority> 2 </Priority>
                    <Codec> pcmu </Codec>
                    <BitRate> 64 </BitRate>
                    <SampleRate> 8000 </SampleRate>
                    <Channel> 1 </Channel>
                </ServiceCapability>
            </Input>
            <Output>
                <ServiceCapability>
                    <Id> 3982738404 </Id>
                    <Type> audio </Type>
                    <Role> producer </Role>
                    <Priority> 1 </Priority>
                    <Codec> pcmu </Codec>
                    <BitRate> 64 </BitRate>
                    <SampleRate> 16000 </SampleRate>
                    <Channel> 1 </Channel>
                </ServiceCapability>
                <ServiceCapability>
                    <Id> 3982738404 </Id>
                    <Type> audio </Type>
                    <Role> producer </Role>
                    <Priority> 2 </Priority>
                    <Codec> linear16 </Codec>
                    <BitRate> 64 </BitRate>
                    <SampleRate> 16000 </SampleRate>
                    <Channel> 1 </Channel>
                </ServiceCapability>
            </Output>    
            
Open Issues
============

    1 How should svc files for node services look like? 

          I would like to write capabilities in XML, i.e. just dump the capability class into the svc file.

    2 How do we want the user to set preferences?

          * General preference "I want high quality video" 

          * Preference for each service "I want high quality for the presenter video but low quality for the audience" 
          
          With the schema described in this document, we would be able to use the priority field in 
          each service capability to set preferences for individual services.  However, each stream
          description sent back to the client would have to include the capability/capabilities it 
          got matched to so the client knows which service should have which stream.         

Interoperability Issues
=======================

    This change will break interoperability between client and servers.
   
Implementation
==============

    The XML would be created from python objects using xml.dom see 
    http://www.python.org/doc/current/lib/module-xml.dom.html

Copyright
=========

    This document is Copyright 2003, The University of Chicago/Argonne National Laboratory.

..
   Local Variables:
   mode: indented-text
   indent-tabs-mode: nil
   sentence-end-double-space: t
   fill-column: 70
   End:

